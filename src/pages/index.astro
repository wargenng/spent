---
import { Author } from "astro:db";
import { db, Comment } from "astro:db";
import "@/styles/globals.css";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import Layout from "../layouts/Layout.astro";

if (Astro.request.method === "POST") {
    // Parse form data
    const formData = await Astro.request.formData();
    const author = formData.get("author");
    const body = formData.get("body");
    if (typeof author === "string" && typeof body === "string") {
        // Insert form data into the Comment table
        const newauthor = await db
            .insert(Author)
            .values({ name: author })
            .returning();
        console.log(newauthor);
        await db.insert(Comment).values({ authorId: newauthor[0].id, body });
    }

    // Redirect to avoid resubmitting the form on refresh
    return Astro.redirect(Astro.url.pathname);
}

// Render the new list of comments on each request
const comments = await db.select().from(Comment);
---

<Layout title="Home">
    <form method="POST" class="grid lg:w-1/2">
        <Label for="author">Author</Label>
        <Input id="author" name="author" />

        <Label for="body">Body</Label>
        <Textarea id="body" name="body" />

        <Button type="submit">Submit</Button>
    </form>

    <h2>Comments</h2>

    {
        comments.map(({ authorId, body }) => (
            <article>
                <p>Author: {authorId}</p>
                <p>{body}</p>
            </article>
        ))
    }
</Layout>
